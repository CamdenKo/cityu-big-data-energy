{"version":3,"sources":["points.js"],"names":["points","pointIncrement","bars","pointsEle","document","getElementById","randInt","min","max","Math","floor","random","calcPercent","cur","round","updateProgressBar","bar","percent","maxPoints","console","log","instance","set","incrementPoints","wait","setTimeout","poses","length","innerHTML","forEach","pointLoop","lowestAmount","highestAmount","genProgressBar","id","toReturn","ldBar","initBars","numBars","push","init"],"mappings":"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","file":"points.b613575f.map","sourceRoot":"..","sourcesContent":["let points = 1\nconst pointIncrement = 1\n\nconst bars = []\nconst pointsEle = document.getElementById('odometer')\n\nconst randInt = (min, max) => Math.floor(Math.random() * (max - min) + min)\n\nconst calcPercent = (cur, max) => {\n  if (cur >= max) return 100\n  return Math.round(100 * cur / max)\n}\n\nconst updateProgressBar = (bar, points) => {\n  bar.percent = calcPercent(points, bar.maxPoints)\n  console.log(bar.percent, points, bar.maxPoints)\n  bar.instance.set(bar.percent)\n  return bar\n}\n\nconst incrementPoints = (wait) => {\n  setTimeout(() => {\n    console.log(poses.length, 'poses')\n    points += pointIncrement\n    pointsEle.innerHTML = points\n    bars.forEach(bar => {\n      updateProgressBar(bar, points)\n    })\n    pointLoop()\n  }, wait)\n}\n\nconst pointLoop = () => {\n  const lowestAmount = 1000\n  const highestAmount = 5000\n  incrementPoints(randInt(lowestAmount, highestAmount))\n}\n\nconst genProgressBar = (id, points, maxPoints) => {\n  const toReturn = {\n    id,\n    maxPoints,\n    percent: calcPercent(points, maxPoints),\n    instance: new ldBar(id),\n  }\n  toReturn.instance.set(toReturn.percent)\n  return toReturn\n}\n\nconst initBars = () => {\n  const numBars = 4\n  for (let bar = 0; bar < numBars; ++bar) {\n    bars.push(genProgressBar(`#ldBar${bar}`, 0, randInt(10, 100)))\n  }\n}\n\nconst init = () => {\n  pointLoop()\n  initBars()\n}\n\ninit()\n"]}