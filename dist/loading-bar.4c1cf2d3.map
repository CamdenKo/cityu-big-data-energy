{"version":3,"sources":["node_modules/browser-pack/_prelude.js","/Users/tkirby/workspace/zbryikt/loading/projects/ldBar/loading-bar/src/loading-bar.ls","/Users/tkirby/workspace/zbryikt/loading/projects/ldBar/loading-bar/src/presets.ls"],"names":[],"mappings":"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","file":"loading-bar.4c1cf2d3.map","sourceRoot":"..","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","require! \"./presets\": {presets}\n\nsimple-str = (arr) -> arr.join ''\nwrap = (content) -> \"data:image/svg+xml;base64,\" + btoa(content)\n\ndo ->\n    make =\n        head: (viewBox) -> \"\"\"\n                <?xml version=\"1.0\" encoding=\"utf-8\"?>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"#viewBox\">\n                \"\"\"\n\n        gradient: (dir = 45, dur = 1, ...colors) ->\n            ret = [@head \"0 0 100 100\"]\n            len = colors.length * 4 + 1\n            dir = dir * Math.PI / 180\n            gx = Math.cos(dir) ** 2\n            gy = Math.sqrt(gx - gx ** 2)\n            if dir > Math.PI * 0.25 =>\n                gy = Math.sin(dir) ** 2\n                gx = Math.sqrt(gy - gy ** 2)\n            x = gx * 100\n            y = gy * 100\n            ret.push \"\"\"<defs><linearGradient id=\"gradient\" x1=\"0\" x2=\"#gx\" y1=\"0\" y2=\"#gy\">\"\"\"\n            for i from 0 til len =>\n                idx = i * 100 / (len - 1)\n                ret.push \"\"\"<stop offset=\"#{idx}%\" stop-color=\"#{colors[i % colors.length]}\"/>\"\"\"\n            ret.push \"\"\"\n                </linearGradient></defs>\n                <rect x=\"0\" y=\"0\" width=\"400\" height=\"400\" fill=\"url(\\#gradient)\">\n                <animateTransform attributeName=\"transform\" type=\"translate\" from=\"-#x,-#y\"\n                to=\"0,0\" dur=\"#{dur}s\" repeatCount=\"indefinite\"/></rect></svg>\n                \"\"\"\n            wrap ret.join(\"\")\n\n        stripe: (c1=\\#b4b4b4, c2=\\#e6e6e6, dur = 1) ->\n            ret = [@head \"0 0 100 100\"]\n            ret ++= [\n                \"\"\"<rect fill=\"#c2\" width=\"100\" height=\"100\"/>\"\"\"\n                \"\"\"<g><g>\"\"\"\n                [\"\"\"<polygon fill=\"#c1\" \"\"\" +\n                 \"\"\"points=\"#{-90 + i * 20},100 #{-100 + i * 20},\"\"\" +\n                 \"\"\"100 #{-60 + i * 20},0 #{-50 + i * 20},0 \"/>\"\"\" for i from 0 til 13].join(\"\")\n                \"\"\"</g><animateTransform attributeName=\"transform\" type=\"translate\" \"\"\"\n                \"\"\"from=\"0,0\" to=\"20,0\" dur=\"#{dur}s\" repeatCount=\"indefinite\"/></g></svg>\"\"\"\n            ].join(\"\")\n            wrap ret\n\n        bubble: (c1 = \\#39d, c2 = \\#9cf, count = 15, dur = 1, size = 6, sw=1) ->\n            ret = [@head(\"0 0 200 200\"), \"\"\"<rect x=\"0\" y=\"0\" width=\"200\" height=\"200\" fill=\"#c1\"/>\"\"\"]\n            for i from 0 til count =>\n                idx = -(i / count) * dur\n                x = Math.random! * 184 + 8\n                r = ( Math.random! * 0.7 + 0.3 ) * size\n                d = dur * (1 + Math.random! * 0.5)\n                ret.push [\n                    \"\"\"<circle cx=\"#x\" cy=\"0\" r=\"#r\" fill=\"none\" stroke=\"#c2\" stroke-width=\"#sw\">\"\"\"\n                    \"\"\"<animate attributeName=\"cy\" values=\"190;-10\" times=\"0;1\" \"\"\"\n                    \"\"\"dur=\"#{d}s\" begin=\"#{idx}s\" repeatCount=\"indefinite\"/>\"\"\"\n                    \"\"\"</circle>\"\"\"\n                    \"\"\"<circle cx=\"#x\" cy=\"0\" r=\"#r\" fill=\"none\" stroke=\"#c2\" stroke-width=\"#sw\">\"\"\"\n                    \"\"\"<animate attributeName=\"cy\" values=\"390;190\" times=\"0;1\" \"\"\"\n                    \"\"\"dur=\"#{d}s\" begin=\"#{idx}s\" repeatCount=\"indefinite\"/>\"\"\"\n                    \"\"\"</circle>\"\"\"\n                ].join(\"\")\n            wrap(ret.join(\"\") + \"</svg>\")\n\n    handler =\n        queue: {}\n        running: false\n        main: (timestamp) ->\n            keepon = false\n            removed = []\n            for k,func of @queue =>\n                ret = func timestamp\n                if !ret => removed.push func\n                keepon = keepon or ret\n            for k,func of @queue => if removed.indexOf(func) >= 0 => delete @queue[k]\n            if keepon => requestAnimationFrame (~> @main it)\n            else @running = false\n        add: (key, f) ->\n            if !@queue[key] => @queue[key] = f\n            if !@running =>\n                @running = true\n                requestAnimationFrame (~> @main it)\n\n\n    window.ldBar = ldBar = (selector, option = {}) ->\n        xmlns = xlink: \"http://www.w3.org/1999/xlink\"\n        root = if typeof! selector is \\String\n            document.querySelector selector\n        else\n            selector\n\n        if !root.ldBar => root.ldBar = @\n        else return root.ldBar\n\n        cls = root.getAttribute(\\class) or ''\n        if !~cls.indexOf('ldBar') => root.setAttribute \\class, \"#cls ldBar\"\n        id-prefix = \"ldBar-#{Math.random!toString 16 .substring 2}\"\n        id =\n            key: id-prefix\n            clip: \"#{id-prefix}-clip\"\n            filter: \"#{id-prefix}-filter\"\n            pattern: \"#{id-prefix}-pattern\"\n            mask: \"#{id-prefix}-mask\"\n            mask-path: \"#{id-prefix}-mask-path\"\n        domTree = (n,o) ->\n            n = newNode n\n            for k,v of o => if k != \\attr => n.appendChild domTree(k, v or {})\n            n.attrs(o.attr or {})\n            n\n        newNode = (n) -> document.createElementNS \"http://www.w3.org/2000/svg\", n\n        document.body.__proto__.__proto__.__proto__\n            ..text = (t) -> @appendChild document.createTextNode(t)\n            ..attrs = (o) -> for k,v of o =>\n                ret = /([^:]+):([^:]+)/.exec(k)\n                if !ret or !xmlns[ret.1] => @setAttribute k, v\n                else @setAttributeNS xmlns[ret.1], k, v\n            ..styles = (o) -> for k,v of o => @style[k] = v\n            ..append = (n) -> @appendChild r = document.createElementNS \"http://www.w3.og/2000/svg\", n\n            ..attr = (n,v) -> if v? => @setAttribute n, v else @getAttribute n\n        config =\n            \"type\": 'stroke'\n            \"img\": ''\n            \"path\": 'M10 10L90 10M90 8M90 12'\n            \"fill-dir\": \\btt\n            \"fill\": \\#25b\n            \"fill-background\": \\#ddd\n            \"fill-background-extrude\": 3\n            \"pattern-size\": null\n            \"stroke-dir\": \\normal\n            \"stroke\": \\#25b\n            \"stroke-width\": \\3\n            \"stroke-trail\": \\#ddd\n            \"stroke-trail-width\": 0.5\n            \"duration\": 1\n            \"easing\": \\linear\n            \"value\": 0\n            \"img-size\": null\n            \"bbox\": null\n            \"set-dim\": true\n            \"aspect-ratio\": \"xMidYMid\"\n            \"min\": 0\n            \"max\": 100\n\n        config[\"preset\"] = root.attr(\"data-preset\") or option[\"preset\"]\n\n        if config.preset?\n            # use the default preset\n            config <<< presets[config.preset]\n\n        # overwrite if there are arguments passed via data-* attributes\n        for attr of config\n            if that = root.attr \"data-#{attr}\"\n                config[attr] = that\n\n        config <<< option\n        if config.img => config.path = null\n\n        is-stroke = config.type == \\stroke\n        parse-res = (v) ->\n            parser = /data:ldbar\\/res,([^()]+)\\(([^)]+)\\)/\n            ret = parser.exec(v)\n            if !ret => return v\n            ret = make[ret.1].apply make, ret.2.split(\\,)\n        config.fill = parse-res config.fill\n        config.stroke = parse-res config.stroke\n        if config[\"set-dim\"] == \\false => config[\"set-dim\"] = false\n\n        dom =\n            attr:\n                \"xmlns:xlink\": \\http://www.w3.org/1999/xlink\n                preserveAspectRatio: config[\"aspect-ratio\"]\n                width: \"100%\", height: \"100%\"\n            defs:\n                filter:\n                    attr: id: id.filter, x: -1, y: -1, width: 3, height: 3\n                    feMorphology: attr:\n                        operator: (if +config[\"fill-background-extrude\"]>=0 => \\dilate else \\erode)\n                        radius: Math.abs(+config[\"fill-background-extrude\"])\n                    feColorMatrix: attr: {values: '0 0 0 0 1    0 0 0 0 1    0 0 0 0 1    0 0 0 1 0', result: \"cm\"}\n                mask:\n                    attr: id: id.mask\n                    image: attr:\n                        \"xlink:href\": config.img\n                        filter: \"url(\\##{id.filter})\"\n                        x: 0, y: 0, width: 100, height: 100, preserveAspectRatio: config[\"aspect-ratio\"]\n\n                g:\n                    mask:\n                        attr: id: id.mask-path\n                        path: attr:\n                            d: config.path or \"\"\n                            fill: \\#fff\n                            stroke: \\#fff\n                            filter: \"url(\\##{id.filter})\"\n\n                clipPath:\n                    attr: id: id.clip\n                    rect: {attr: class: \\mask, fill: \\#000}\n                pattern:\n                    attr:\n                        id: id.pattern, patternUnits: \\userSpaceOnUse\n                        x:0, y: 0, width: 300, height: 300\n                    image: attr: x: 0, y: 0, width: 300, height: 300\n\n        svg = domTree \\svg, dom\n        text = document.createElement \\div\n        text.setAttribute \\class, \\ldBar-label\n        root.appendChild svg\n        root.appendChild text\n\n        group = [0,0]\n        length = 0\n\n        @fit = ~>\n            if config[\"bbox\"] =>\n              box = that.split(' ').map(->+(it.trim!))\n              box = {x: box.0, y: box.1, width: box.2, height: box.3}\n            else box = group.1.getBBox!\n            if !box or box.width == 0 or box.height == 0 => box = {x: 0, y: 0, width: 100, height: 100}\n            d = (Math.max.apply(\n              null, <[stroke-width stroke-trail-width fill-background-extrude]>.map(->config[it]))\n            ) * 1.5\n\n            svg.attrs viewBox: [box.x - d, box.y - d, box.width + d * 2, box.height + d * 2].join(\" \")\n            if config[\"set-dim\"] => <[width height]>.map ~> if !root.style[it] or @fit[it] =>\n              root.style[it] = \"#{box[it] + d * 2}px\"\n              @fit[it] = true\n\n            rect = group.0.querySelector \\rect\n            if rect => rect.attrs do\n                x: box.x - d, y: box.y - d, width: box.width + d * 2, height: box.height + d * 2\n\n        if config.path =>\n            if is-stroke =>\n                group.0 = domTree \\g, path: attr:\n                    d: config.path\n                    fill: \\none\n                    class: \\baseline\n            else\n                group.0 = domTree \\g, rect: attr:\n                    x: 0, y: 0, width: 100, height: 100\n                    mask: \"url(\\##{id.mask-path})\", fill: config[\"fill-background\"]\n                    class: \\frame\n\n            svg.appendChild group.0\n            group.1 = domTree \\g, path: attr:\n                d: config.path, class: if is-stroke => \\mainline else \\solid\n                \"clip-path\": if config.type == \\fill => \"url(\\##{id.clip})\" else ''\n            svg.appendChild group.1\n            path0 = group.0.querySelector (if is-stroke => \\path else \\rect)\n            path1 = group.1.querySelector \\path\n            if is-stroke => path1.attrs fill: \\none\n\n            patimg = svg.querySelector 'pattern image'\n            img = new Image!\n            img.addEventListener \\load, ->\n                box = if config[\"pattern-size\"] => {width: +that, height: +that}\n                else if img.width and img.height => {width: img.width, height: img.height}\n                else {width: 300, height: 300}\n                svg.querySelector \\pattern .attrs {width: box.width, height: box.height}\n                patimg.attrs {width: box.width, height: box.height}\n            if /.+\\..+|^data:/.exec(if !is-stroke => config.fill else config.stroke) =>\n                img.src = if !is-stroke => config.fill else config.stroke\n                patimg.attrs \"xlink:href\": img.src #if !is-stroke => config.fill else config.stroke\n\n            if is-stroke =>\n                path0.attrs stroke: config[\"stroke-trail\"], \"stroke-width\": config[\"stroke-trail-width\"]\n                path1.attrs do\n                    \"stroke-width\": config[\"stroke-width\"]\n                    stroke: if /.+\\..+|^data:/.exec(config.stroke) => \"url(\\##{id.pattern})\" else config.stroke\n            if config.fill and !is-stroke =>\n                path1.attrs do\n                    fill: if /.+\\..+|^data:/.exec(config.fill) => \"url(\\##{id.pattern})\" else config.fill\n\n            length = path1.getTotalLength!\n            @fit!\n            @inited = true\n        else if config.img =>\n            if config[\"img-size\"] =>\n                ret = config[\"img-size\"].split(\\,)\n                size = {width: +ret.0, height: +ret.1}\n            else size = {width: 100, height: 100}\n\n            group.0 = domTree \\g, rect: attr:\n                x: 0, y: 0, width: 100, height: 100, mask: \"url(\\##{id.mask})\", fill: config[\"fill-background\"]\n            svg.querySelector 'mask image' .attrs do\n                width: size.width, height: size.height\n            group.1 = domTree \\g, image: attr:\n                width: size.width, height: size.height, x: 0, y: 0, preserveAspectRatio: config[\"aspect-ratio\"]\n                #width: 100, height: 100, x: 0, y: 0, preserveAspectRatio: \"xMidYMid\"\n                \"clip-path\": if config.type == \\fill => \"url(\\##{id.clip})\" else ''\n                \"xlink:href\": config.img, class: \\solid\n            img = new Image!\n            img.addEventListener \\load, ~>\n                if config[\"img-size\"] =>\n                    ret = config[\"img-size\"].split(\\,)\n                    size = {width: +ret.0, height: +ret.1}\n                else if img.width and img.height => size = {width: img.width, height: img.height}\n                else size = {width: 100, height: 100}\n                svg.querySelector 'mask image' .attrs do\n                    width: size.width, height: size.height\n                group.1.querySelector 'image' .attrs do\n                    width: size.width, height: size.height\n\n                @fit!\n                @set undefined, false\n                @inited = true\n            img.src = config.img\n            svg.appendChild group.0\n            svg.appendChild group.1\n        svg.attrs width: \\100%, height: \\100% #, viewBox: '0 0 100 100'\n\n        @transition =\n            value:\n                src: 0\n                des: 0\n            time: {}\n\n            ease: (t,b,c,d) ->\n                t = t / (d * 0.5)\n                if t < 1 => return c * 0.5 * t * t + b\n                t = t - 1\n                return -c * 0.5 * (t*(t - 2) - 1) + b\n\n            handler: (time, doTransition = true) ->\n                if !@time.src? => @time.src = time\n                [min,max] = [config[\"min\"], config[\"max\"]]\n                [dv, dt, dur] = [@value.des - @value.src, (time - @time.src) * 0.001, +config[\"duration\"] or 1]\n                v = if doTransition => Math.round(@ease dt, @value.src, dv, dur) else @value.des\n                v >?= min\n                v <?= max\n                text.textContent = v\n                p = 100.0 * (v - min ) / ( max - min )\n                if is-stroke =>\n                    node = path1\n                    style =\n                        \"stroke-dasharray\": (\n                            if config[\"stroke-dir\"] == \\reverse =>\n                                \"0 #{length * (100 - p) * 0.01} #{length * p * 0.01} 0\"\n                            else => \"#{p * 0.01 * length} #{(100 - p) * 0.01 * length + 1}\"\n                        )\n                else\n                    box = group.1.getBBox!\n                    dir = config[\"fill-dir\"]\n                    style = if dir == \\btt or !dir => do\n                        y: box.y + box.height * (100 - p) * 0.01\n                        height: box.height * p * 0.01\n                        x: box.x, width: box.width\n                    else if dir == \\ttb => do\n                        y: box.y, height: box.height * p * 0.01\n                        x: box.x, width: box.width\n                    else if dir == \\ltr => do\n                        y: box.y, height: box.height\n                        x: box.x, width: box.width * p * 0.01\n                    else if dir == \\rtl => do\n                        y: box.y, height: box.height\n                        x: box.x + box.width * (100 - p) * 0.01\n                        width: box.width * p * 0.01\n                    node = svg.querySelector \\rect\n                node.attrs style\n                if dt >= dur => delete @time.src; return false\n                return true\n            start: (src, des, doTransition) ->\n                @value <<< {src, des}\n                !!( root.offsetWidth || root.offsetHeight || root.getClientRects!length )\n                if !doTransition or !( root.offsetWidth || root.offsetHeight || root.getClientRects!length ) =>\n                    @time.src = 0\n                    @handler 1000, false\n                    return\n                handler.add id.key, (time) ~> return @handler time\n\n        @set = (v,doTransition = true) ->\n            src = @value or 0\n            if v? => @value = v else v = @value\n            des = @value\n            @transition.start src, des, doTransition\n\n        @set (+config.value or 0), false\n        @\n\n    window.addEventListener \\load, (->\n        for node in document.querySelectorAll(\\.ldBar) =>\n          if !node.ldBar => node.ldBar = new ldBar node\n    ), false\n\nmodule.exports = ldBar\n","export presets =\n    rainbow:\n        \"type\": 'stroke'\n        \"path\": 'M10 10L90 10'\n        \"stroke\": 'data:ldbar/res,gradient(0,1,#a551df,#fd51ad,#ff7f82,#ffb874,#ffeb90)'\n        \"bbox\": \"10 10 80 10\"\n    energy:\n        \"type\": 'fill'\n        \"path\": 'M15 5L85 5A5 5 0 0 1 85 15L15 15A5 5 0 0 1 15 5'\n        \"stroke\": \\#f00\n        \"fill\": 'data:ldbar/res,gradient(45,2,#4e9,#8fb,#4e9)'\n        \"fill-dir\": \"ltr\"\n        \"fill-background\": \\#444\n        \"fill-background-extrude\": 1\n        \"bbox\": \"10 5 80 10\"\n    stripe:\n        \"type\": 'fill'\n        \"path\": 'M15 5L85 5A5 5 0 0 1 85 15L15 15A5 5 0 0 1 15 5'\n        \"stroke\": \\#f00\n        \"fill\": 'data:ldbar/res,stripe(#25b,#58e,1)'\n        \"fill-dir\": \"ltr\"\n        \"fill-background\": \\#ddd\n        \"fill-background-extrude\": 1\n        \"bbox\": \"10 5 80 10\"\n    text:\n        \"type\": 'fill'\n        \"img\": \"\"\"data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"70\" height=\"20\" viewBox=\"0 0 70 20\"><text x=\"35\" y=\"10\" text-anchor=\"middle\" dominant-baseline=\"central\" font-family=\"arial\">LOADING</text></svg>\"\"\"\n        \"fill-background-extrude\": 1.3\n        \"pattern-size\": 100\n        \"fill-dir\": \"ltr\"\n        \"img-size\": \"70,20\"\n        \"bbox\": \"0 0 70 20\"\n    line:\n        \"type\": 'stroke'\n        \"path\": 'M10 10L90 10'\n        \"stroke\": \\#25b\n        \"stroke-width\": 3\n        \"stroke-trail\": \\#ddd\n        \"stroke-trail-width\": 1\n        \"bbox\": \"10 10 80 10\"\n    fan:\n        \"type\": 'stroke'\n        \"path\": 'M10 90A40 40 0 0 1 90 90'\n        \"fill-dir\": \\btt\n        \"fill\": \\#25b\n        \"fill-background\": \\#ddd\n        \"fill-background-extrude\": 3\n        \"stroke-dir\": \\normal\n        \"stroke\": \\#25b\n        \"stroke-width\": \\3\n        \"stroke-trail\": \\#ddd\n        \"stroke-trail-width\": 0.5\n        \"bbox\": \"10 50 80 40\"\n    circle:\n        \"type\": 'stroke'\n        \"path\": 'M50 10A40 40 0 0 1 50 90A40 40 0 0 1 50 10'\n        \"fill-dir\": \\btt\n        \"fill\": \\#25b\n        \"fill-background\": \\#ddd\n        \"fill-background-extrude\": 3\n        \"stroke-dir\": \\normal\n        \"stroke\": \\#25b\n        \"stroke-width\": \\3\n        \"stroke-trail\": \\#ddd\n        \"stroke-trail-width\": 0.5\n        \"bbox\": \"10 10 80 80\"\n    bubble:\n        \"type\": 'fill'\n        \"path\": 'M50 10A40 40 0 0 1 50 90A40 40 0 0 1 50 10'\n        \"fill-dir\": \\btt\n        \"fill\": 'data:ldbar/res,bubble(#39d,#cef)'\n        \"pattern-size\": \"150\"\n        \"fill-background\": \\#ddd\n        \"fill-background-extrude\": 2\n        \"stroke-dir\": \\normal\n        \"stroke\": \\#25b\n        \"stroke-width\": \\3\n        \"stroke-trail\": \\#ddd\n        \"stroke-trail-width\": 0.5\n        \"bbox\": \"10 10 80 80\"\n"]}